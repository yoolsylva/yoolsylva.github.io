{"version":3,"sources":["utils/index.js","components/TronLinkGuide/index.js","components/Nav/index.js","components/HomePage/index.js","components/WinnersOne/index.js","components/PotTimers1/index.js","components/PlayersOne/index.js","components/LuckyJackpotCNR/index.js","components/App/index.js","index.js"],"names":["utils","ROIAddress","partnerAddress","OneMinuteJackpot","CNRTokenAddress","CNRTokenContract","OneMinuteContract","affiliateAddress","tronWeb","tronGrid","ownerAddress","ownerBalance","address","balance","CNRbalance","tronwebReady","getPlayersLengthOne","playersOne","potOne","setContract","_tronWeb","console","log","this","defaultAddress","base58","TronGrid","contract","at","getCNRBalance","fetchAccountBalance","getAffiliate","getGameOwner","oneminuteListener","Win","watch","err","event","error","group","info","name","transaction","block","result","groupEnd","Promise","resolve","reject","getOwner","call","then","res","fromHex","_oAddress","replace","getGameOnwerBalance","catch","isAddress","trx","getAccount","balanceOf","parseFloat","_hex","toFixed","getCurrentAddress","window","getBalance","balanceInSun","balanceInTRX","fromSun","href","location","ref","n","indexOf","length","substring","cookies","Cookies","set","path","expires","Date","now","cookieref","get","getPlayersOne","getPlayers","_players","players","len","i","toLowerCase","getTimeLeftOne","getTimeLeft","parseInt","_TimeLeft","getTotalWinOne","getTotalWin","_totalWin","totalWinOne","getPotOne","getPot","_pot","shortenAddress","substr","getContractBalance","TronLinkGuide","props","state","className","Component","Nav","handleSideNavToggle","setState","currentState","showSideNav","clickSound","play","src","type","Utils","id","style","display","home","onClick","click","luckycups","OneMinute","Countdown","ROI","target","Home","border","width","color","Winners","tick","bind","startGetWinners","DataToShow","intervalHandle","clearInterval","options","eventName","limit","getEvents","transactions","UNIX_timestamp","a","year","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","all","GetEvents","sort","b","block_timestamp","setInterval","index","map","winner","key","greyRow","gameNumber","alt","timeConverter","amount","PotTimers","day","hour","minutes","seconds","playButtonText","claimButtonText","Announcement","claimHidden","playHidden","tick1","startGetPots","LatestTime","PlayJackpot","ClaimWinner","intervalHandle1","send","shouldPollResponse","callValue","Math","floor","convertTime","forceUpdate","gameCheck","Swal","fire","html","animation","customClass","popup","approve","feeLimit","resApprove","time","hidden","Players","startGetPlayers","playersCombined","getPlayersLength","current","cnt","push","ret","trap_number","pro1","player","WinningChance","LuckyJackpotCNR","copied","Investment","withdrawHidden","One_balance","myTotalInvestment","mytotalClaimedAmount","TotalFeedROI_JP","TotalFeedROI_LC","totalInvestors","totalPlayedJP","totalWinJP","totalGamesJP","NextClaimAmount","myTotalPlays","ROI_Balance","NextClaimTime","checked","count","tempTime","startTimer","ROIContract","_contractBalance","gettotalPlayed","_totalPlayed","getTotalFeedROI","_totalFeedROI","gettotalGames","_totalGames","getmyTotalWin","myTotalWin","_myTotalWin","cnrBalance","getmyTotalPlayed","myTotalPlayed","_myTotalPlayed","getmyPlays","_myPlays","getTotalFeedROI_JP","gettotalPlayedJP","getTotalWinJP","gettotalGamesJP","getmyTotalWinJP","getmyTotalPlayedJP","getContractBalanceROI","pot","marginBottom","height","marginRight","PotTimers1","PlayersOne","text","onCopy","App","installed","loggedIn","loading","ready","tronWebState","exact","HomePage","component","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.da5233df.chunk.js","sourcesContent":["import TronGrid from \"trongrid\";\nimport Cookies from 'universal-cookie';\n\nconst utils = {\n  //MAINNET\n  // JackpotAddress:\"TBBdcjiiz1WnF81hKbb84Cpfgnv5Q8uqm2\", //410d51aa3e46fa63039e065af472cf92abb3d79531\n  // LuckyCupAddress:\"TT2y9hM7PCq9ZnuziK1AcYwcNvwvN5Qh2w\", //41bb303d68574d801d785e1cbbfbb8fc587a953b54\n  // ROIAddress:\"TEf7cPTpa1EzXMUdmr16QN3U48uQNfs5Hc\",//41336ca43b398da68a6080f5ddce5478a3f4c278dd\n  // partnerAddress:\"TATmzpCSXFQdrv4xUHoaJv3JFtGT9N57JE\",\n  // OneMinuteJackpot:\"TLg837uDzK5YFb394yxrNrMvK5g9hHfioL\",\n  // LuckyCupCNRAddress:\"TNcL8MaFaPFifU2ye1mmC3exmeBwESsY3X\", //\n  // CNRTokenAddress:\"TYLrbh1pVcx95bop33XQ1iYdh7r3ogEQ8Q\",\n\n  //TESTNET\n  ROIAddress: \"TBrX5r6pkimTLyuEjG8hNzqdaNwDNsrNJV\",//4114ac6f3479bf280a27a9eeb0717986ffd5be65f4\n  partnerAddress: \"TATmzpCSXFQdrv4xUHoaJv3JFtGT9N57JE\",\n  OneMinuteJackpot: \"TJLqhAAqfkWmEsCb56C7Ximfw18y9th7K5\",\n  CNRTokenAddress: \"TX6GwdmA67pzDA1pgnj8Be4vRqhxTysema\",\n\n  CNRTokenContract: false,\n  OneMinuteContract: false,\n  affiliateAddress: \"\",\n  tronWeb: false,\n  tronGrid: false,\n\n  ownerAddress: \"--\",\n  ownerBalance: 0,\n\n  address: \"-\",\n  balance: 0,\n  CNRbalance: 0,\n\n  tronwebReady: false,\n\n  getPlayersLengthOne: 0,\n  playersOne: [],\n  potOne: 0,\n  // totalWin:0,\n\n  async setContract(_tronWeb) {\n    console.log(\"Here\");\n    this.tronwebReady = true;\n    this.address = _tronWeb.defaultAddress.base58;\n    this.tronGrid = new TronGrid(_tronWeb);\n    this.CNRTokenContract = await _tronWeb.contract().at(this.CNRTokenAddress);\n    this.getCNRBalance();\n    this.fetchAccountBalance();\n    this.getAffiliate();\n    this.getGameOwner();\n    this.OneMinuteContract = await _tronWeb.contract().at(this.OneMinuteJackpot);\n   \n    console.log('set Contract');\n    console.log('set TronGrid');\n  \n    this.oneminuteListener();\n  },\n  oneminuteListener() {\n    if(!this.OneMinuteContract) return\n    this.OneMinuteContract.Win().watch((err, event) => {\n      if (err) return console.error('Error with \"Message\" event:', err);\n\n      console.group('New event received');\n      console.info('- Contract Address:', event.contract);\n      console.info('- Event Name:', event.name);\n      console.info('- Transaction:', event.transaction);\n      console.info('- Block number:', event.block);\n      console.info('- Result:', event.result, '\\n');\n      console.groupEnd();\n    });\n  },\n  async getGameOwner() {\n    if (this.contract) {\n      return new Promise((resolve, reject) => {\n        this.contract.getOwner()\n          .call()\n          .then(res => {\n            console.log('getOwner: ', this.tronWeb.address.fromHex(res._oAddress.replace(\"0x\", \"41\")));\n            this.ownerAddress = this.tronWeb.address.fromHex(res._oAddress.replace(\"0x\", \"41\"));\n            this.getGameOnwerBalance();\n            resolve(this.ownerAddress);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  },\n  async getGameOnwerBalance() {\n    if (this.tronWeb)\n      if (this.tronWeb.isAddress(this.ownerAddress)) {\n        return new Promise((resolve, reject) => {\n          this.tronWeb.trx.getAccount(this.ownerAddress)\n            .then(res => {\n              console.log('getAccount: ', res);\n              this.ownerBalance = res.balance / 100000000;\n              resolve(res);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n        }\n        );\n\n      }\n\n\n  },\n  async getCNRBalance() {\n    return new Promise((resolve, reject) => {\n      if (!this.CNRTokenContract) return reject('CNR contract didnt init');\n\n      this.CNRTokenContract.balanceOf(this.address)\n        .call()\n        .then(res => {\n          this.CNRbalance = parseFloat(res._hex / 100000000).toFixed(2);\n          resolve(this.CNRbalance);\n        })\n        .catch(err => {\n          console.info(err);\n          reject(err)\n        });\n    })\n  },\n  async getCurrentAddress() {\n    return this.tronWeb.defaultAddress.base58;\n  },\n  async fetchAccountBalance() {\n\n    try {\n      if (this.tronwebReady) {\n        //const account = await window.tronWeb.trx.getAccount();\n        const balanceInSun = await window.tronWeb.trx.getBalance(); //number\n        const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\n        // const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\n        this.balance = balanceInTRX;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  },\n  async getAffiliate() {\n    var href = window.location.href;\n    var ref = \"\";\n    //get ref=....\n    var n = href.indexOf(\"ref=\");\n    var leng = href.length;\n    if (n > 0) {\n      ref = href.substring(n + 4, n + 4 + 34);\n    }\n\n    //console.log(ref);\n    const cookies = new Cookies();\n    if (this.tronWeb.isAddress(ref)) {\n\n      cookies.set('TTMref', ref, { path: '/', expires: new Date(Date.now() + 31536000) });\n      //console.log(cookies.get('TTMref')); \n\n      this.affiliateAddress = ref;\n\n    }\n    else {\n      const cookieref = cookies.get('TTMref');\n      if (this.tronWeb.isAddress(cookieref))\n        this.affiliateAddress = cookieref;\n      else\n        this.affiliateAddress = this.address;\n\n    }\n    console.log('ref: ', this.affiliateAddress);\n  },\n  async getPlayersOne() {\n    if (this.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        this.OneMinuteContract.getPlayers()\n          .call()\n          .then(res => {\n\n            this.playersOne = res._players;\n            console.log('getPlayersOne: ', this.players);\n            var len = this.playersOne.length;\n            this.getPlayersLengthOne = len;\n            for (var i = 0; i < len; i++) {\n              this.playersOne[i] = this.playersOne[i].toLowerCase();\n            }\n            resolve(this.playersOne);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  },\n  async getTimeLeftOne() {\n    if (this.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        this.OneMinuteContract.getTimeLeft()\n          .call()\n          .then(res => {\n            console.log('getTimeLeftOne: ', parseInt(res._TimeLeft));\n            this.getTimeLeftOne = parseInt(res._TimeLeft);\n            resolve(parseInt(res._TimeLeft));\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  },\n  async getTotalWinOne() {\n    if (this.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        this.OneMinuteContract.getTotalWin()\n          .call()\n          .then(res => {\n            console.log('getTotalWinOne: ', parseFloat(res._totalWin / 100000000).toFixed(4));\n            this.totalWinOne = parseFloat(res._totalWin / 100000000).toFixed(4);\n            resolve(parseFloat(res._totalWin / 100000000).toFixed(4));\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  },\n  async getPotOne() {\n    if (this.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        this.OneMinuteContract.getPot()\n          .call()\n          .then(res => {\n            console.log('getPotOne: ', parseFloat(res._pot / 100000000).toFixed(4));\n            this.potOne = parseFloat(res._pot / 100000000).toFixed(4);\n            resolve(parseFloat(res._pot / 100000000).toFixed(4));\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  },\n  shortenAddress(address) {\n    return (address.length === 34) ? address.substr(0, 5) + '...' + address.substr(29, 33) : address;\n  },\n  async getContractBalance() {\n\n  }\n};\n\nexport default utils;\n","import React, { Component } from 'react';\nimport './TronLinkGuide.scss';\nimport Utils from \"../../utils\";\nclass TronLinkGuide extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    \n  }\n  render() {\n\n\n\n    if (!this.props.tronwebReady)\n      return (\n        <div>\n           <header className=\"header-top-area\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                            <div className=\"top-wallet-address text-center\">\n                                <h4>To play this game, you must use Tronlink or Tron Pay Google Chrome extension for PC, or Tron Wallet, Smart Wallet, TronLink wallet or Math Wallet for mobile devices.</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n          \n          \n        </div>\n      );\n      return(\n        <div>\n        </div>\n      );\n\n  }\n\n}\n\nexport default TronLinkGuide;","///////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport './Nav.scss';\nimport Utils from \"../../utils\";\nimport NavBar from 'react-responsive-menubar/lib/NavBar';\n\nexport default class Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        showSideNav:false\n    };\n\n  }\n  click(){\n    this.clickSound.play();\n  }\n  async componentDidMount() {\n \n  }\n  handleSideNavToggle = ()=>{\n      this.setState((currentState)=>{\n          return {showSideNav: !currentState.showSideNav}\n      })\n  }\n  //<TronLinkGuide loading={Utils.loading} tronwebInstalled={Utils.tronwebInstalled} tronwebLogin={Utils.tronwebLogin}/>\n  render() {\n   \n    return (\n\n    <div>\n        <audio ref={(clickSound) => { this.clickSound = clickSound; }}>\n            <source src=\"https://cryptoworldgames.com/assets/Click.mp3\" type=\"audio/mpeg\" >\n            </source>\n          </audio>\n        <header>\n            \n            <div className=\"header-top-area\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                            <div className=\"top-wallet-address text-center\">\n                                <h4>Wallet Name: {Utils.shortenAddress(Utils.address)}</h4>\n                                <h4>Balance: {Utils.balance} Trx | {Utils.CNRbalance} CNR</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n           <div className=\"menu-wrap\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-12\">\n                            <div className=\"main-menu\">\n                                <nav id=\"mobile-menu\" style={{display: \"block\"}}>\n                                    <ul>\n                                        <li><a className={this.props.home} href=\"#/\"  onClick={()=>this.click()}>Home</a></li>\n                                        <li><a  href=\"https://cryptoworldgames.com/games/FastTRXLoans/\"  onClick={()=>this.click()}>Fast CNR Loans</a></li>\n                                        <li><a className={this.props.luckycups} href=\"#/luckycups\"  onClick={()=>this.click()}>Lucky Cups</a></li>\n                                        <li><a className={this.props.OneMinute} href=\"#/luckyJackpotcnr\"  onClick={()=>this.click()}>Lucky Jackpot</a></li>\n                                        <li><a className={this.props.Countdown} href=\"#/countdownJackpot\"  onClick={()=>this.click()}>CT Jackpot</a></li>\n                                        <li><a className={this.props.ROI} href=\"#/1dailyROI\"  onClick={()=>this.click()}>1% Daily ROI</a></li>\n                                        <li><a href=\"https://changelly.com/?ref_id=u6m70vcenxiv6kmm/\" target=\"_blank\"  onClick={()=>this.click()}>Buy CNR</a></li>\n                                        \n                                        \n                                    </ul>\n                                </nav>\n                            </div>\n                            <div className=\"mobile-menu\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header>\n        \n    </div>\n\n    );\n  }\n}\n","///////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport \"./HomePage.scss\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport TronWeb from \"tronweb\";\nimport Utils from \"../../utils\";\n//import Players from \"../Players\";\n//import Winners from \"../Winners\";\nimport Nav from \"../Nav\";\nimport Swal from \"sweetalert2\";\n//import PotTimers from \"../PotTimers\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n\n  }\n  async componentWillUnmount() {\n\n  }\n  async componentDidMount() {\n\n  }\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        <Nav home=\"active\" luckycups=\"\" ROI=\"\" />\n\n        <main>\n          <div className=\"full-trx-section\">\n            <div className=\"container\">\n\n              <div className=\"row justify-content-center\">\n                <div className=\"col-xl-12 col-lg-12 col-md-12\">\n\n                  <div className=\"trx-title text-center\">\n                    <h1>Crypto World Games</h1>\n                    <h4>Play our Tron (CNR) Dapp Games!</h4>\n                  </div>\n                  <div className=\"text-center\">\n                    <h2>Choose your game</h2>\n                    <h5>You must use TronLink or TronPay Google Chrome extension, or TronLink, Tron Wallet, Smart Wallet, or Math Wallet for mobile.</h5>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-sm\">\n                          <a href=\"#luckycups/\"><img style={{ border: \"1px solid #8224e3\", width: \"240px\" }} src=\"img/lucky-cup.jpg\" />\n                            <h3>Lucky Cups</h3></a>\n                          <h4 style={{ color: \"#a568e2\" }}>\n                            1 in 3 wins 2x            </h4>\n                        </div>\n                        <div className=\"col-sm\">\n                          <a href=\"#luckycupscnr/\"><img style={{ border: \"1px solid #8224e3\", width: \"240px\" }} src=\"img/lucky-cup.jpg\" />\n                            <h3>Lucky Cups CNR</h3></a>\n                          <h4 style={{ color: \"#a568e2\" }}>\n                            1 in 3 wins 2x            </h4>\n                        </div>\n                        <div className=\"col-sm\">\n                          <a href=\"#/1dailyROI/\"><img style={{ border: \"1px solid #8224e3\", width: \"240px\" }} src=\"img/example022.jpg\" />\n\n                            <h3>1% Daily ROI</h3></a>\n                          <h4 style={{ color: \"#a568e2\" }}>\n                            Earn 1% Daily FOREVER*            </h4>\n\n                        </div>\n                        <div className=\"col-sm\">\n                          <a href=\"#/luckyJackpot/\"><img style={{ border: \"1px solid #8224e3\", width: \"240px\" }} src=\"img/lucky-jackpot.jpg\" />\n\n                            <h3>Lucky Jackpot</h3></a>\n                          <h4 style={{ color: \"#a568e2\" }}>\n                            A Lucky Jackpot            </h4>\n\n                        </div>\n                        <div className=\"col-sm\">\n                          <a href=\"#/countdownJackpot/\"><img style={{ border: \"1px solid #8224e3\", width: \"240px\" }} src=\"img/example022.jpg\" />\n\n                            <h3>CT Jackpot</h3></a>\n                          <h4 style={{ color: \"#a568e2\" }}>\n                            Huge Jackpots!            </h4>\n                        </div>\n                        <div className=\"col-sm\">\n                          <a href=\"https://cryptoworldgames.com/games/FastTRXLoans/\"><img style={{ border: \"1px solid #8224e3\", width: \"240px\" }} src=\"img/fastloans.jpg\" />\n\n                            <h3>Fast CNR Loans</h3></a>\n                          <h4 style={{ color: \"#a568e2\" }}>\n                            get CNR loans from CNR</h4>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n\n\n\n\n\n\n          </div>\n\n        </main>\n\n\n      </div>\n\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport \"./WinnersOne.scss\";\nimport Utils from \"../../utils\";\nimport axios from 'axios';\n\nclass Winners extends Component {\n  constructor(props) {\n    super(props);\n    this.tick = this.tick.bind(this);\n    this.startGetWinners = this.startGetWinners.bind(this);\n\n    this.DataToShow = null;\n    this.intervalHandle = null;\n  }\n  async componentWillUnmount() {\n    //console.log(\"unmounted\");\n    clearInterval(this.intervalHandle);\n\n  }\n  async componentDidMount() {\n    this.startGetWinners();\n\n  }\n  async GetEvents() {\n    const options = {\n      eventName: 'Win',\n      limit: 50,\n    };\n    return new Promise((resolve, reject) => {\n      Utils.tronGrid.contract.getEvents(Utils.OneMinuteJackpot, options)\n        .then(transactions => {\n          console.log(transactions['data']);\n          //const len = transactions['data'].length;\n          resolve(transactions['data']);\n\n        })\n        .catch(err => {\n          console.error(err);\n          reject(err);\n        });\n    }\n    );\n  }\n  timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = month + ' ' + date + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n    return time;\n  }\n  async tick() {\n    console.log(\"Winners:\");\n    if (Utils.tronGrid) {\n      Promise.all([this.GetEvents()])\n        .then(result => {\n          // //event Win(address creator,address winner, uint256 amount,address payable [] players,uint256 bet);\n          //   var tempDataToShow=[];\n          //   var temp = result[0];\n          //   var leng = temp.length;\n          //   var transactions = [];\n          //   for (var i=0;i<leng;i++){\n          //     var results = temp[i]['result'][1];\n          //     var array = results.match(/.{1,64}/g);\n          //     if (temp[i].event_name==\"Win\"){\n          //       var myObj = {\n          //           \"contract_address\":temp[i].contract_address,\n          //           \"amount\":parseInt(array[2],16),\n          //           \"transaction_id\":temp[i].transaction_id,\n          //           \"event_name\":temp[i].event_name,\n          //           \"winner\":array[1].replace(\"000000000000000000000000\",\"41\"),\n          //           \"block_timestamp\":temp[i].block_timestamp\n          //          }\n          //       tempDataToShow.push(myObj);\n\n\n          //     }\n          //   }\n          console.log('event', result)\n          this.DataToShow = result[0];\n\n\n          if (this.DataToShow != null)\n            this.DataToShow.sort(function (a, b) {\n              return b.block_timestamp - a.block_timestamp;\n            });\n        });\n    }\n\n  }\n  startGetWinners() {\n    this.intervalHandle = setInterval(this.tick, 2000);\n  }\n  greyRow(index) {\n    if (index % 2 == 0)\n      return \"grey-trx-bg\";\n    else\n      return \"\";\n  }\n  render() {\n\n    if (this.DataToShow)\n      return (\n        <div>\n          <div className=\"common-trx-section special-margin\">\n            <h3 className=\"text-center\">Past Winners</h3>\n          </div>\n          <div className=\"all-info-table\">\n\n            <div className=\"panel-body\">\n              <table className=\"jackpot-table\">\n                <thead>\n                  <tr>\n                    <th>Game#</th>\n                    <th>Player</th>\n                    <th>Date</th>\n                    <th>CNR</th>\n                  </tr>\n                </thead>\n                <tbody>\n\n                  {this.DataToShow.map((winner, index) => (\n                    <tr key={index}>\n                      <td className={this.greyRow(index)}>{winner.result.gameNumber}</td>\n                      <td className={this.greyRow(index)}><img className=\"mar-10\" src=\"https://moolah.bet/static/media/trx.cd57182c.svg\" alt=\"\" /> {Utils.shortenAddress(Utils.tronWeb.address.fromHex(winner.result.winner.replace(\"0x\", \"41\")))}</td>\n                      <td className={this.greyRow(index)}>{this.timeConverter(parseInt(winner.block_timestamp))}</td>\n                      <td className={this.greyRow(index)}>{parseFloat(winner.result.amount / 100000000).toFixed(4)} CNR</td>\n                    </tr>\n\n                  ))}\n\n\n                </tbody>\n              </table>\n\n            </div>\n          </div>\n\n        </div>\n\n      );\n    else\n      return (\n\n        <div className=\"tab-content\">\n          <div id=\"custom-tab-1\" className=\"tab-pane fade show active\">\n            <div className=\"row\">\n              <div className=\"col-xl-12\">\n                <div className=\"custom-trx-inner-info\">\n                  <h5>No Winner</h5>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n      );\n  }\n}\nexport default Winners;\n\n","import React, { Component } from \"react\";\n\nimport Utils from \"../../utils\";\nimport Swal from \"sweetalert2\";\n\nclass PotTimers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      day: \"00\",\n      hour: \"00\",\n      minutes: \"00\",\n      seconds: \"00\",\n      playButtonText: \"Pay 25 CNR to play\",\n      claimButtonText: \"Claim Winner\",\n      Announcement: \"When the timer hits 00:00:00 then one lucky person will win the jackpot!\",\n      claimHidden: true,\n      playHidden: true,\n    };\n    this.tick = this.tick.bind(this);\n    this.tick1 = this.tick1.bind(this);\n    this.startGetPots = this.startGetPots.bind(this);\n    this.LatestTime = 0;\n    this.PlayJackpot = this.PlayJackpot.bind(this);\n    this.ClaimWinner = this.ClaimWinner.bind(this);\n    this.intervalHandle = null;\n    this.intervalHandle1 = null;\n  }\n  async componentWillUnmount() {\n    //console.log(\"unmounted\");\n    clearInterval(this.intervalHandle);\n    clearInterval(this.intervalHandle1);\n\n  }\n\n  PlayJackpot() {\n    console.log(\"Play J\");\n    if (Utils.OneMinuteContract) {\n      this.setState({\n        playButtonText: \"Waiting...\"\n      });\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.play(Utils.affiliateAddress)\n          .send({\n            shouldPollResponse: true,\n            callValue: (10 * 100000000) // converted to SUN\n          }\n          )\n          .then(res => {\n            console.log('play Jackpot game: ', res);\n            this.setState({\n              playButtonText: \"Pay 25 CNR to play\",\n              Announcement: \"Thanks for playing!\",\n            });\n            Utils.fetchAccountBalance();\n            Utils.getPotOne();\n            Utils.getTotalWinOne();\n            resolve(res);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n\n      }\n      );\n    }\n  }\n  async componentDidMount() {\n    this.startGetPots();\n  }\n  async tick() {\n    console.log(\"Pots:\");\n\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.getTimeLeft()\n          .call()\n          .then(res => {\n            console.log('getTimeLeft: ', parseInt(res._TimeLeft));\n            Utils.getPotOne();\n\n            this.LatestTime = Utils.getTimeLeftOne = parseInt(res._TimeLeft);\n            if (this.LatestTime < 0) this.LatestTime = 0;\n\n            var n = parseInt(this.LatestTime);\n            var day = Math.floor(n / (24 * 3600));\n\n            n = n % (24 * 3600);\n            var hour = Math.floor(n / 3600);\n\n            n %= 3600;\n            var minutes = Math.floor(n / 60);\n\n            n %= 60;\n            var seconds = Math.floor(n);\n\n            this.setState({\n              day: this.convertTime(day),\n              hour: this.convertTime(hour),\n              minutes: this.convertTime(minutes),\n              seconds: this.convertTime(seconds),\n            }, this.forceUpdate());\n\n            resolve(parseInt(res._TimeLeft));\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n  async tick1() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.getPlayers()\n          .call()\n          .then(res => {\n\n            Utils.playersOne = res._players;\n            console.log('getPlayersOne: ', Utils.playersOne);\n            var len = Utils.playersOne.length;\n            Utils.getPlayersLengthOne = len;\n            for (var i = 0; i < len; i++) {\n              Utils.playersOne[i] = Utils.playersOne[i].toLowerCase();\n            }\n            if ((parseInt(Utils.getTimeLeftOne) == 0) && (Utils.getPlayersLengthOne >= 2)) {\n              var len = Utils.getPlayersLengthOne;\n\n              this.setState({\n                claimHidden: \"\",\n                playHidden: true,\n                claimButtonText: \"Reveal Winner\",\n                Announcement: \"Round ended. Click 'Reveal Winner' to continue.\"\n              }, this.forceUpdate());\n\n\n            }\n            else {\n              this.setState({\n                claimHidden: true,\n                playHidden: \"\",\n                Announcement: \"When the timer hits 00:00:00 then one lucky person will win the jackpot!\"\n              }, this.forceUpdate());\n            }\n            if (this.LatestTime > 0) {\n              this.LatestTime -= 1;\n              console.log(this.LatestTime);\n              if (this.LatestTime < 0) this.LatestTime = 0;\n\n              var n = parseInt(this.LatestTime);\n              var day = Math.floor(n / (24 * 3600));\n\n              n = n % (24 * 3600);\n              var hour = Math.floor(n / 3600);\n\n              n %= 3600;\n              var minutes = Math.floor(n / 60);\n\n              n %= 60;\n              var seconds = Math.floor(n);\n\n              this.setState({\n                day: this.convertTime(day),\n                hour: this.convertTime(hour),\n                minutes: this.convertTime(minutes),\n                seconds: this.convertTime(seconds),\n              }, this.forceUpdate());\n\n            }\n            resolve(Utils.playersOne);\n          })\n          .catch(err => {\n            console.info(err);\n          });\n      }\n      );\n    }\n\n  }\n  ClaimWinner() {\n    if ((Utils.getPlayersLengthOne <= 1) || (Utils.getTimeLeftOne > 0)) {\n      Swal.fire({\n        html: 'You can claim the reward when countdown is ended and there are more than 2 players',\n        type: \"error\",\n        animation: false,\n        customClass: {\n          popup: 'animated jackInTheBox'\n        }\n      });\n      return;\n    }\n    console.log(\"Claim J\");\n    if (Utils.OneMinuteContract) {\n      this.setState({\n        claimButtonText: \"Waiting...\"\n      });\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.gameCheck()\n          .send()\n          .then(res => {\n            console.log('claim Jackpot game: ', res);\n            Utils.fetchAccountBalance();\n            Utils.getPotOne();\n            Utils.getTotalWinOne();\n            this.setState({\n              claimHidden: true,\n              playHidden: \"\",\n              //Announcement: \"\"\n            }, this.forceUpdate());\n            resolve(res);\n          })\n          .catch(err => {\n            console.info(err);\n          });\n\n      }\n      );\n    }\n  }\n\n  async PlayJackpot() {\n    if (Utils.ownerAddress == Utils.address) {\n      Swal.fire({\n        html: \"Owner cannot play\",\n        type: \"info\",\n        animation: false,\n        customClass: {\n          popup: 'animated jackInTheBox'\n        }\n      });\n      return;\n    }\n    if (!Utils.OneMinuteContract || !Utils.CNRTokenContract) return\n    if (((Utils.getPlayersLengthOne > 1) && (this.LatestTime > 0)) || ((Utils.getPlayersLengthOne == 1) && (this.LatestTime == 0))) console.info(\"Play J\");\n\n    this.setState({\n      playButtonText: \"Waiting...\"\n    });\n\n    try {\n      const resApprove = await Utils.CNRTokenContract.approve(Utils.OneMinuteJackpot, 25*100000000).send({\n        feeLimit: 100000000,\n        shouldPollResponse: false,\n      });\n      console.info(resApprove);\n\n      const res = await Utils.OneMinuteContract.play(25*100000000, Utils.affiliateAddress, Utils.partnerAddress).send({\n        feeLimit: 100000000,\n        shouldPollResponse: false,\n      });\n      console.info('play Jackpot game: ', res);\n      this.setState({\n        playButtonText: \"Pay 25 CNR to Play\",\n        Announcement: \"Thanks for playing!\",\n      });\n      Utils.getCNRBalance();\n      Utils.getPotOne();\n      Utils.getTotalWinOne();\n    } catch (err) {\n      console.info(err);\n      this.setState({\n        playButtonText: \"Pay 25 CNR to play\"\n      });\n    }\n  }\n\n  startGetPots() {\n    this.intervalHandle = setInterval(this.tick, 3000);\n    this.intervalHandle1 = setInterval(this.tick1, 1000);\n  }\n\n  convertTime(time) {\n    if (time < 10)\n      return \"0\" + time;\n    else return time + \"\";\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"current-jackpot-section\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-12 col-lg-12 col-md-12 text-center\">\n              <div className=\"current-jackpot\">\n                <h2>Jackpot triggers every 12 Hours! <br /> Play multiple times to increase your chance of winning!\n                          <br />\n\n                </h2>\n              </div>\n            </div>\n            <div className=\"col-xl-12 col-lg-12 col-md-12 text-center\">\n              <div className=\"current-jackpot border-none\">\n                <h2>{this.state.Announcement}</h2>\n              </div>\n            </div>\n            <div className=\"col-xl-12 col-lg-12 col-md-12 text-center\">\n              <div className=\"current-jackpot border-none\">\n                <h2 style={{ color: \"#66ff00\" }} >Current Lucky Jackpot : {Utils.potOne} CNR</h2>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n\n        <div className=\"countdown-section\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-8 col-lg-8 col-md-8\">\n              <div className=\"row\">\n                <div className=\"col-xl-4 col-lg-4 col-md-4 col-4 text-center\">\n                  <div className=\"single-countdown-timer right-dot\">\n                    <h1>{this.state.hour}</h1>\n                    <span>hrs</span>\n                  </div>\n                </div>\n                <div className=\"col-xl-4 col-lg-4 col-md-4 col-4  text-center\">\n                  <div className=\"single-countdown-timer right-dot\">\n                    <h1>{this.state.minutes}</h1>\n                    <span>mins</span>\n                  </div>\n                </div>\n                <div className=\"col-xl-4 col-lg-4 col-md-4 col-4 text-center\">\n                  <div className=\"single-countdown-timer\">\n                    <h1>{this.state.seconds}</h1>\n                    <span>secs</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\n            <div className=\"col-xl-12 col-lg-12 col-md-12 text-center\">\n              <a className=\"btn trx-btn\" style={{ color: \"white\" }} onClick={this.ClaimWinner} hidden={this.state.claimHidden}>{this.state.claimButtonText}</a>\n              <a className=\"btn trx-btn\" style={{ color: \"white\" }} onClick={this.PlayJackpot} hidden={this.state.playHidden}>{this.state.playButtonText}</a>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\nexport default PotTimers;\n\n","import React, { Component } from \"react\";\nimport \"./Players.scss\";\nimport Utils from \"../../utils\";\n\nclass Players extends Component {\n  constructor(props) {\n    super(props);\n    this.tick = this.tick.bind(this);\n    this.startGetPlayers = this.startGetPlayers.bind(this);\n\n    this.DataToShow = null;\n    this.intervalHandle = null;\n    this.playersCombined = [];\n    this.players = [];\n    this.getPlayersLength =0;\n  }\n  async componentWillUnmount(){\n    //console.log(\"unmounted\");\n    clearInterval(this.intervalHandle);\n    \n  }\n  async componentDidMount() {\n    this.startGetPlayers();\n  }\n  async tick() { \n    console.log(\"Players:\");  \n    \n    if (Utils.OneMinuteContract){\n      return new Promise((resolve, reject) => {\n          Utils.OneMinuteContract.getPlayers()\n          .call()\n          .then(res => {\n              \n              Utils.playersOne = res._players;\n\n              this.players = res._players;\n              console.log('getPlayers: ',this.players);\n              console.log('getPlayerslength: ',this.players.length);\n              var len = this.players.length;\n              this.getPlayersLength = len;\n\n              this.players.sort();\n\n              var current = null;\n              var cnt = 0;\n              this.playersCombined = [];\n              for (var i = 0; i < len; i++) {\n                  if (this.players[i] != current) {\n                      if (cnt > 0) {\n                        this.playersCombined.push([i,current,cnt]);\n                          //document.write(current + ' comes --> ' + cnt + ' times<br>');\n                      }\n                      current = this.players[i];\n                      cnt = 1;\n                  } else {\n                      cnt++;\n                  }\n              }\n              if (cnt > 0) {\n                 this.playersCombined.push([i,current,cnt]);\n                  //document.write(current + ' comes --> ' + cnt + ' times');\n              }\n              console.log('playersCombined:',this.playersCombined);\n              this.DataToShow = this.playersCombined;\n              resolve(this.DataToShow);\n\n\n              \n              // var len = Utils.playersOne.length;\n              // Utils.getPlayersLengthOne = len;\n              // for (var i=0;i<len;i++)\n              // {\n              //   Utils.playersOne[i] = Utils.playersOne[i].toLowerCase();\n              // }\n              // this.DataToShow = Utils.playersOne.slice(0).reverse();\n              // // Utils.playersOne = this.DataToShow;\n              // resolve(Utils.playersOne.slice(0).reverse());\n          })\n          .catch(err => {\n              console.log(err);\n          });   \n        } \n      );\n    }\n  }\n  LastWinner(){\n    \n    if (this.DataToShow){\n      var len = this.DataToShow.length;\n      if (len>0)\n        return Utils.shortenAddress(Utils.tronWeb.address.fromHex(this.DataToShow[0].replace(\"0x\", \"41\")));\n      else\n        return \"\";\n    }else\n    return \"\";\n  }\n  WinnerStyle(){\n    if (this.DataToShow){\n      var len = this.DataToShow.length;\n      if (len>0)\n        {\n          if (Utils.tronWeb.address.fromHex(this.DataToShow[0].replace(\"0x\", \"41\")).toLowerCase() == Utils.address.toLowerCase())\n             return \" green-text\";\n        }\n      else\n        return \"\";\n    }else\n    return \"\";\n  }\n  TextPlayer(index){\n    if (index ==0) return \"Current Player:\"; else return \"Player:\";\n  }\n  startGetPlayers() {\n    this.intervalHandle = setInterval(this.tick, 2000);\n  }\n  greyRow(index,address){\n    var ret = \"\"\n    if (index % 2 ==0 )\n      ret = \"grey-trx-bg\";\n    else\n      ret = \"\";\n\n    if (address.toLowerCase() == Utils.address.toLowerCase())\n      ret +=\" green-text\";\n\n    return ret;\n  }\n  WinningChance(trap_number){\n    \n      var pro1 = parseFloat(this.getPlayersLength-trap_number)/parseFloat(this.getPlayersLength);\n      \n\n     return (parseFloat(100.00 - 100.00 * pro1).toFixed(2)+\"\");\n    \n  }\n  render() {\n\n  if (this.DataToShow)\n    return (\n      <div>\n        \n        <div className=\"common-trx-area\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                                        \n                    <div className=\"common-trx-section\">\n                         <h3 className=\"text-center\">Currently Playing</h3>\n                    </div>\n                    <div className=\"all-info-table\">\n                        \n                        <div className=\"panel-body\">\n                            <table className=\"jackpot-table\">\n                                <thead>\n                                    <tr>\n                                        <th>Player</th>\n                                        <th>Buy-in</th>\n                                        <th>Win Chance</th>\n                                        <th>Total Bet</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                  {this.DataToShow.map((player, index) => (\n                                      <tr>\n                                        <td className={this.greyRow(index,Utils.tronWeb.address.fromHex(player[1].replace(\"0x\", \"41\")))} key={index}><img className=\"mar-10\"\n                                            src=\"img/trx-icon.png\"\n                                            alt=\"\"/>{Utils.shortenAddress(Utils.tronWeb.address.fromHex(player[1].replace(\"0x\", \"41\")))}</td>\n                                        <td className={this.greyRow(index,Utils.tronWeb.address.fromHex(player[1].replace(\"0x\", \"41\")))} >{player[2]}</td>\n                                        <td className={this.greyRow(index,Utils.tronWeb.address.fromHex(player[1].replace(\"0x\", \"41\")))} >{this.WinningChance(player[2])} %</td>\n                                        <td className={this.greyRow(index,Utils.tronWeb.address.fromHex(player[1].replace(\"0x\", \"41\")))} >{player[2] * 25} CNR</td>\n                                    </tr>\n                                      \n                                  ))}\n                                    \n                                    \n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n      </div>  \n      );\n  else \n     return(\n      <div>\n\n        <div className=\"common-trx-area\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                    <div className=\"common-trx-section special-margin\">\n                        <h3 className=\"text-center\">Currently Playing</h3>\n                        <div className=\"custom-trx-inner-info tab-border\">\n                          <h5>Waiting for player</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>  \n      \n      );\n  }\n\n}\nexport default Players;\n\n","///////////////////////////////////////////////////////////////\nimport React, { Component } from \"react\";\nimport \"./LuckyJackpotCNR.scss\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport TronWeb from \"tronweb\";\nimport Utils from \"../../utils\";\nimport WinnersOne from \"../WinnersOne\";\nimport Nav from \"../Nav\";\nimport Swal from \"sweetalert2\";\nimport PotTimers1 from \"../PotTimers1\";\nimport PlayersOne from \"../PlayersOne\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nexport default class LuckyJackpotCNR extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      claimHidden: true,\n      playHidden: true,\n      Announcement: \"\",\n      playButtonText: \"Play Now\",\n      claimButtonText: \"Claim Winner\",\n      copied: false,\n      Investment: 0,\n      day: 0,\n      hour: 0,\n      minutes: 0,\n      seconds: 0,\n      withdrawHidden: true,\n      One_balance: 0,\n      myTotalInvestment: 0,\n      mytotalClaimedAmount: 0,\n      TotalFeedROI_JP: 0,\n      TotalFeedROI_LC: 0,\n      totalInvestors: 0,\n      totalPlayedJP: 0,\n      totalWinJP: 0,\n      totalGamesJP: 0,\n      NextClaimAmount: -1,\n      myTotalPlays: 0,\n      ROI_Balance: 0\n    };\n    this.NextClaimTime = 1;\n    this.checked = false;\n    this.count = 0;\n    this.tempTime = 0;\n\n    this.tick = this.tick.bind(this);\n    this.tick1 = this.tick1.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.intervalHandle = null;\n    this.intervalHandle1 = null;\n  }\n  async componentWillUnmount() {\n    //console.log(\"unmounted\");\n    clearInterval(this.intervalHandle);\n    clearInterval(this.intervalHandle1);\n\n  }\n  async componentDidMount() {\n\n    this.startTimer();\n\n  }\n  async getContractBalanceROI() {\n    if (Utils.ROIContract) {\n      return new Promise((resolve, reject) => {\n        Utils.ROIContract.getContractBalance()\n          .call()\n          .then(res => {\n            this.setState({\n              ROI_Balance: parseFloat(res._contractBalance / 100000000).toFixed(4),\n            });\n            console.log('ROI Balance', parseFloat(res._contractBalance / 100000000).toFixed(4));\n            resolve(res);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n\n  //gettotalPlayed\n  async gettotalPlayedJP() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.gettotalPlayed()\n          .call()\n          .then(res => {\n            this.setState({\n              totalPlayedJP: parseFloat(res._totalPlayed / 100000000).toFixed(4)\n            })\n            resolve(res._totalPlayed);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n\n  async getTotalFeedROI_JP() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.getTotalFeedROI()\n          .call()\n          .then(res => {\n            this.setState({\n              TotalFeedROI_JP: parseFloat(res._totalFeedROI / 100000000).toFixed(4)\n            })\n            resolve(res._totalFeedROI);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n\n  //gettotalGames Jackpot\n  async gettotalGamesJP() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.gettotalGames()\n          .call()\n          .then(res => {\n            this.setState({\n              totalGamesJP: parseInt(res._totalGames)\n            })\n            resolve(res._totalGames);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n  async getmyTotalWinJP() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.getmyTotalWin()\n          .call()\n          .then(res => {\n            this.setState({\n              myTotalWin: parseFloat(res._myTotalWin / 100000000).toFixed(4)\n            })\n            resolve(res._myTotalWin);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n\n  getContractBalance() {\n    Utils.getCNRBalance()\n      .then(cnrBalance => {\n        this.setState({\n          One_balance: cnrBalance\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  //getTotalWin\n  async getmyTotalPlayedJP() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.getmyTotalPlayed()\n          .call()\n          .then(res => {\n            this.setState({\n              myTotalPlayed: parseFloat(res._myTotalPlayed / 100000000).toFixed(4)\n            })\n            resolve(res._myTotalPlayed);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n  async getmyPlays() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.getmyPlays()\n          .call()\n          .then(res => {\n            this.setState({\n              myTotalPlays: parseInt(res._myPlays)\n            })\n            resolve(res._myPlays);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n\n  //getTotalWin\n  async getTotalWinJP() {\n    if (Utils.OneMinuteContract) {\n      return new Promise((resolve, reject) => {\n        Utils.OneMinuteContract.getTotalWin()\n          .call()\n          .then(res => {\n            this.setState({\n              totalWinJP: parseFloat(res._totalWin / 100000000).toFixed(4)\n            })\n            resolve(res._totalWin);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n      );\n    }\n  }\n  async tick() {\n    Utils.fetchAccountBalance();\n    this.getTotalFeedROI_JP();\n    this.gettotalPlayedJP();\n    this.getTotalWinJP();\n    this.gettotalGamesJP();\n    this.getmyTotalWinJP();\n    this.getmyTotalPlayedJP();\n    this.getContractBalance();\n    this.getmyPlays();\n    this.getContractBalanceROI();\n    if ((parseInt(Utils.getTimeLeft) == 0) && (Utils.getPlayersLength >= 2)) {\n      var len = Utils.getPlayersLength;\n\n      if (Utils.tronWeb.address.fromHex(Utils.players[len - 1].replace(\"0x\", \"41\")).toLowerCase() == Utils.address.toLowerCase())\n        this.setState({\n          claimHidden: \"\"\n        });\n      this.setState({\n        //claimHidden:\"\",\n        playHidden: \"\",\n        claimButtonText: \"Claim\",\n        Announcement: Utils.shortenAddress(Utils.tronWeb.address.fromHex(Utils.players[len - 1].replace(\"0x\", \"41\"))) + \" won \" + Utils.pot + \" CNR last round. Click Play Now to play new game.\"\n      }, this.forceUpdate());\n    }\n    else {\n      this.setState({\n        claimHidden: true,\n        playHidden: \"\",\n        Announcement: \"\"\n      }, this.forceUpdate());\n    }\n  }\n  async tick1() {\n    if (this.NextClaimTime > 0) {\n      this.NextClaimTime -= 1;\n      console.log(this.NextClaimTime);\n      if (this.NextClaimTime <= 0) {\n        this.setState({\n          withdrawHidden: \"\"\n        }, this.forceUpdate());\n        this.NextClaimTime = 0;\n      }\n\n      var n = parseInt(this.NextClaimTime);\n      var day = Math.floor(n / (24 * 3600));\n\n      n = n % (24 * 3600);\n      var hour = Math.floor(n / 3600);\n\n      n %= 3600;\n      var minutes = Math.floor(n / 60);\n\n      n %= 60;\n      var seconds = Math.floor(n);\n\n      this.setState({\n        day: this.convertTime(day),\n        hour: this.convertTime(hour),\n        minutes: this.convertTime(minutes),\n        seconds: this.convertTime(seconds),\n      }, this.forceUpdate());\n\n    }\n  }\n  convertTime(time) {\n    if (parseInt(time) < 10)\n      return \"0\" + time;\n    else return time + \"\";\n  }\n  startTimer() {\n    this.intervalHandle = setInterval(this.tick, 3000);\n    this.intervalHandle1 = setInterval(this.tick1, 1000);\n  }\n\n  ProcessCounter() {\n    if (Utils.getTimeLeft <= 0) return \"-\";\n    else\n      return Utils.getTimeLeft + ' seconds';\n  }\n  //\n\n  render() {\n\n    return (\n\n      <div>\n        <Nav home=\"\" luckycups=\"\" OneMinute=\"active\" />\n        <TronLinkGuide tronwebReady={Utils.tronwebReady} />\n        <main>\n          <div className=\"full-trx-section\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center\" style={{ marginBottom: '20px' }}>\n                <a href=\"#/luckyJackpot\">\n                  <img style={{ width: 60, height: 60, marginRight: '20px' }} src=\"/img/trx-icon.png\" />\n                </a>\n                <a href=\"#/luckyJackpotcnr\">\n                  <img style={{ width: 60, height: 60 }} src=\"/img/CNRicon.png\" />\n                </a>\n              </div>\n              <div className=\"row lucky-jackpot-wrapper\">\n                <div className=\"col-xl-6 col-lg-6 col-md-12\">\n                  <div className=\"row justify-content-center\">\n                    <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                      <img style={{ width: \"100%\" }} src=\"img/cnr_lucky_jackpot.png\" />\n                    </div>\n                  </div>\n                  <PotTimers1 />\n                  <div className=\"full-common-trx-area\">\n\n                    <div className=\"common-trx-area\">\n                      <div className=\"row justify-content-center\">\n                        <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                          <PlayersOne />\n\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n\n                </div>\n                <div className=\"col-xl-6 col-lg-6 col-md-12\">\n\n                  <div className=\"common-trx-area\">\n                    <div className=\"row justify-content-center\">\n                      <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                        <WinnersOne />\n\n\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"common-trx-area special-margin\">\n                    <div className=\"row justify-content-center\">\n                      <div className=\"col-xl-12 col-lg-12 col-md-12 text-center\">\n                        <div className=\"common-trx-section\">\n                          <h3>Total Paid to Winners</h3>\n                          <h2 className=\"trx-box\">{this.state.totalWinJP} CNR</h2>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                  <div className=\"some-trx-details\">\n                    <div className=\"row\">\n                      <div className=\"offset-xl-2 col-xl-10 col-lg-12 col-md-12\">\n                        <div className=\"trx-details details-margin\">\n                          <h3 className=\"text-center\">All Stats</h3>\n                          <h5>Total Plays of Lucky Jackpot: {this.state.totalGamesJP}</h5>\n                          <h5>Total CNR Played in Lucky Jackpot : {this.state.totalPlayedJP} CNR</h5>\n                          <h5>Total Lucky Jackpot paid to Winners : {this.state.totalWinJP} CNR</h5>\n                          <h5>Total Lucky Jackpot fed 1% <a style={{ color: \"#bc63f7\" }} href=\"#/1dailyROI\" >Daily CNR ROI</a> : {this.state.TotalFeedROI_JP} CNR</h5>\n                          <h5 className=\"mb-0\">1%  Daily CNR ROI Smart Contract Balance: {this.state.ROI_Balance} CNR</h5>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"some-trx-details special-margin\">\n                    <div className=\"row\">\n                      <div className=\"offset-xl-2 col-xl-10 col-lg-12 col-md-12\">\n                        <div className=\"trx-details\">\n                          <h3 className=\"text-center\">Your Stats</h3>\n                          <h5>Total Plays of Lucky Jackpot: {this.state.myTotalPlays}</h5>\n                          <h5>Total CNR Played in Lucky Jackpot Game : {this.state.myTotalPlayed} CNR</h5>\n                          <h5>Total Won in Lucky Jackpot Game : {this.state.myTotalWin} CNR</h5>\n                          <h5 className=\"mb-0\">Total Profit from Lucky Jackpot Game : {parseFloat(this.state.myTotalWin - this.state.myTotalPlayed).toFixed(4)} CNR</h5>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"common-trx-area special-margin\">\n                    <div className=\"row justify-content-center\">\n                      <div className=\"offset-xl-2 col-xl-10 col-md-12 text-center\">\n                        <div className=\"common-trx-section\">\n                          <h3>Referral link</h3>\n                          <h5 className=\"trx-box\">{\"https://CryptoWorldGames.com/#/?ref=\" + Utils.address}</h5>\n                          <CopyToClipboard text={\"https://cryptoworldgames.com/#/?ref=\" + Utils.address}\n                            onCopy={() => this.setState({ copied: true })} >\n                            <a className=\"btn trx-btn roi-margin-btn\" style={{ color: \"white\" }} type=\"text\">Copy</a>\n                          </CopyToClipboard>\n                          {this.state.copied ? <span style={{ color: 'red' }}>Copied.</span> : null}\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n\n        </main>\n\n\n      </div>\n\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport {\n  HashRouter,\n  BrowserRouter,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport TronWeb from \"tronweb\";\nimport TronGrid from \"trongrid\";\nimport HomePage from '../HomePage';\nimport LuckyJackpotCNR from '../LuckyJackpotCNR';\nimport Utils from \"../../utils\";\n\n/////////////////////////////////////////////////////////////////\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    }\n    this.loading= true;\n    this.tick = this.tick.bind(this);\n    this.intervalHandle = null; \n  }\n  async tick() { \n    console.log(\"Checking TronWeb connection:\");  \n    \n    if ((!!window.tronWeb)&&(window.tronWeb.ready))\n    {\n      console.log(\"Logged in and Ready\");\n      Utils.tronWeb = window.tronWeb;\n      await new Promise(resolve => {\n        Utils.setContract(window.tronWeb).then(res => {\n              this.forceUpdate();\n              resolve(res);\n          })\n          .catch(err => {\n              console.log(err);\n          });   \n      });\n      \n\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n      this.setState({\n          tronWeb: tronWebState\n      });\n      clearInterval(this.intervalHandle);\n\n    }\n  }\n  async componentWillUnmount(){\n    //console.log(\"unmounted\");\n    clearInterval(this.intervalHandle);\n    \n  }\n  async componentDidMount() {\n    \n    this.intervalHandle = setInterval(this.tick, 200);\n    return;\n  }\n  render() {\n    return (\n        <div>\n          \n          <HashRouter>\n              <div>\n                <Route exact path=\"/\" exact component={HomePage} />\n                <Route exact path=\"/luckyJackpotcnr\" component={LuckyJackpotCNR} />\n              </div>\n          </HashRouter>\n        </div>\n      );\n  }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App';\n\nvar root = document.getElementById(\"root\");\n\nReactDOM.render(<App />,root);\n\n"],"sourceRoot":""}